#version 440 core

layout(location = 0)in vec3 vPosition;			
layout(location = 1)in vec3 vNormal;			
layout(location = 2)in vec3 vertexPosition_modelspace;
layout(location = 3)in vec3 vColors;
layout(location = 4)in vec2 vertexUV;

layout(location = 0) out vec3 vPositionEye;
layout(location = 1) out vec3 vNormalEye;
layout(location = 2) out vec3 Colors;
layout(location = 3) out vec2 UV;


uniform mat3 NormalMatrix;
uniform mat4 ModelView;
uniform mat4 MVP;


void main(){
    vPositionEye = (ModelView * vec4(vPosition, 1.0)).xyz;
    vNormalEye = normalize(NormalMatrix * vNormal);
    gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
    Colors = vColors;
    UV = vertexUV;
}